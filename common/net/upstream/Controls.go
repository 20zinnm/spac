// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package upstream

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Controls struct {
	_tab flatbuffers.Table
}

func GetRootAsControls(buf []byte, offset flatbuffers.UOffsetT) *Controls {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Controls{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Controls) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Controls) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Controls) Left() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *Controls) MutateLeft(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func (rcv *Controls) Right() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *Controls) MutateRight(n bool) bool {
	return rcv._tab.MutateBoolSlot(6, n)
}

func (rcv *Controls) Thrusting() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *Controls) MutateThrusting(n bool) bool {
	return rcv._tab.MutateBoolSlot(8, n)
}

func (rcv *Controls) Shooting() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *Controls) MutateShooting(n bool) bool {
	return rcv._tab.MutateBoolSlot(10, n)
}

func ControlsStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func ControlsAddLeft(builder *flatbuffers.Builder, left bool) {
	builder.PrependBoolSlot(0, left, false)
}
func ControlsAddRight(builder *flatbuffers.Builder, right bool) {
	builder.PrependBoolSlot(1, right, false)
}
func ControlsAddThrusting(builder *flatbuffers.Builder, thrusting bool) {
	builder.PrependBoolSlot(2, thrusting, false)
}
func ControlsAddShooting(builder *flatbuffers.Builder, shooting bool) {
	builder.PrependBoolSlot(3, shooting, false)
}
func ControlsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
